MODULE main
VAR
	corner1 : 1..8;
	corner2 : 1..8;
	corner3 : 1..8;
	corner4 : 1..8;
	corner5 : 1..8;
	corner6 : 1..8;
	corner7 : 1..8;
	corner8 : 1..8;
	move : 1..6;

ASSIGN -- Give here any initial configuration
	init(corner1) := 4;
	init(corner2) := 2;
	init(corner3) := 3;
	init(corner4) := 8;
	init(corner5) := 6;
	init(corner6) := 7;
	init(corner7) := 5;
	init(corner8) := 1;
	
	next(move) := {1,2,3,4,5,6};

	next(corner1) := case
		corner1=1 & next(move)=1 : 4;
		corner1=2 & next(move)=1 : 1;
		corner1=3 & next(move)=1 : 2;
		corner1=4 & next(move)=1 : 3;
		corner1=1 & next(move)=2 : 5;
		corner1=4 & next(move)=2 : 1;
		corner1=5 & next(move)=2 : 8;
		corner1=8 & next(move)=2 : 4;
		corner1=1 & next(move)=3 : 5;
		corner1=2 & next(move)=3 : 1;
		corner1=5 & next(move)=3 : 6;
		corner1=6 & next(move)=3 : 2;
		corner1=5 & next(move)=4 : 8;
		corner1=6 & next(move)=4 : 5;
		corner1=7 & next(move)=4 : 6;
		corner1=8 & next(move)=4 : 7;
		corner1=2 & next(move)=5 : 6;
		corner1=6 & next(move)=5 : 7;
		corner1=7 & next(move)=5 : 3;
		corner1=3 & next(move)=5 : 2;
		corner1=3 & next(move)=6 : 4;
		corner1=4 & next(move)=6 : 8;
		corner1=8 & next(move)=6 : 7;
		corner1=7 & next(move)=6 : 3;
		TRUE : corner1;
	esac;
	
	next(corner2) := case
		corner2=1 & next(move)=1 : 4;
		corner2=2 & next(move)=1 : 1;
		corner2=3 & next(move)=1 : 2;
		corner2=4 & next(move)=1 : 3;
		corner2=1 & next(move)=2 : 5;
		corner2=4 & next(move)=2 : 1;
		corner2=5 & next(move)=2 : 8;
		corner2=8 & next(move)=2 : 4;
		corner2=1 & next(move)=3 : 5;
		corner2=2 & next(move)=3 : 1;
		corner2=5 & next(move)=3 : 6;
		corner2=6 & next(move)=3 : 2;
		corner2=5 & next(move)=4 : 8;
		corner2=6 & next(move)=4 : 5;
		corner2=7 & next(move)=4 : 6;
		corner2=8 & next(move)=4 : 7;
		corner2=2 & next(move)=5 : 6;
		corner2=6 & next(move)=5 : 7;
		corner2=7 & next(move)=5 : 3;
		corner2=3 & next(move)=5 : 2;
		corner2=3 & next(move)=6 : 4;
		corner2=4 & next(move)=6 : 8;
		corner2=8 & next(move)=6 : 7;
		corner2=7 & next(move)=6 : 3;
		TRUE : corner2;
	esac;

	next(corner3) := case
		corner3=1 & next(move)=1 : 4;
		corner3=2 & next(move)=1 : 1;
		corner3=3 & next(move)=1 : 2;
		corner3=4 & next(move)=1 : 3;
		corner3=1 & next(move)=2 : 5;
		corner3=4 & next(move)=2 : 1;
		corner3=5 & next(move)=2 : 8;
		corner3=8 & next(move)=2 : 4;
		corner3=1 & next(move)=3 : 5;
		corner3=2 & next(move)=3 : 1;
		corner3=5 & next(move)=3 : 6;
		corner3=6 & next(move)=3 : 2;
		corner3=5 & next(move)=4 : 8;
		corner3=6 & next(move)=4 : 5;
		corner3=7 & next(move)=4 : 6;
		corner3=8 & next(move)=4 : 7;
		corner3=2 & next(move)=5 : 6;
		corner3=6 & next(move)=5 : 7;
		corner3=7 & next(move)=5 : 3;
		corner3=3 & next(move)=5 : 2;
		corner3=3 & next(move)=6 : 4;
		corner3=4 & next(move)=6 : 8;
		corner3=8 & next(move)=6 : 7;
		corner3=7 & next(move)=6 : 3;
		TRUE : corner3;
	esac;

	next(corner4) := case
		corner4=1 & next(move)=1 : 4;
		corner4=2 & next(move)=1 : 1;
		corner4=3 & next(move)=1 : 2;
		corner4=4 & next(move)=1 : 3;
		corner4=1 & next(move)=2 : 5;
		corner4=4 & next(move)=2 : 1;
		corner4=5 & next(move)=2 : 8;
		corner4=8 & next(move)=2 : 4;
		corner4=1 & next(move)=3 : 5;
		corner4=2 & next(move)=3 : 1;
		corner4=5 & next(move)=3 : 6;
		corner4=6 & next(move)=3 : 2;
		corner4=5 & next(move)=4 : 8;
		corner4=6 & next(move)=4 : 5;
		corner4=7 & next(move)=4 : 6;
		corner4=8 & next(move)=4 : 7;
		corner4=2 & next(move)=5 : 6;
		corner4=6 & next(move)=5 : 7;
		corner4=7 & next(move)=5 : 3;
		corner4=3 & next(move)=5 : 2;
		corner4=3 & next(move)=6 : 4;
		corner4=4 & next(move)=6 : 8;
		corner4=8 & next(move)=6 : 7;
		corner4=7 & next(move)=6 : 3;
		TRUE : corner4;
	esac;

	next(corner5) := case
		corner5=1 & next(move)=1 : 4;
		corner5=2 & next(move)=1 : 1;
		corner5=3 & next(move)=1 : 2;
		corner5=4 & next(move)=1 : 3;
		corner5=1 & next(move)=2 : 5;
		corner5=4 & next(move)=2 : 1;
		corner5=5 & next(move)=2 : 8;
		corner5=8 & next(move)=2 : 4;
		corner5=1 & next(move)=3 : 5;
		corner5=2 & next(move)=3 : 1;
		corner5=5 & next(move)=3 : 6;
		corner5=6 & next(move)=3 : 2;
		corner5=5 & next(move)=4 : 8;
		corner5=6 & next(move)=4 : 5;
		corner5=7 & next(move)=4 : 6;
		corner5=8 & next(move)=4 : 7;
		corner5=2 & next(move)=5 : 6;
		corner5=6 & next(move)=5 : 7;
		corner5=7 & next(move)=5 : 3;
		corner5=3 & next(move)=5 : 2;
		corner5=3 & next(move)=6 : 4;
		corner5=4 & next(move)=6 : 8;
		corner5=8 & next(move)=6 : 7;
		corner5=7 & next(move)=6 : 3;
		TRUE : corner5;
	esac;

	next(corner6) := case
		corner6=1 & next(move)=1 : 4;
		corner6=2 & next(move)=1 : 1;
		corner6=3 & next(move)=1 : 2;
		corner6=4 & next(move)=1 : 3;
		corner6=1 & next(move)=2 : 5;
		corner6=4 & next(move)=2 : 1;
		corner6=5 & next(move)=2 : 8;
		corner6=8 & next(move)=2 : 4;
		corner6=1 & next(move)=3 : 5;
		corner6=2 & next(move)=3 : 1;
		corner6=5 & next(move)=3 : 6;
		corner6=6 & next(move)=3 : 2;
		corner6=5 & next(move)=4 : 8;
		corner6=6 & next(move)=4 : 5;
		corner6=7 & next(move)=4 : 6;
		corner6=8 & next(move)=4 : 7;
		corner6=2 & next(move)=5 : 6;
		corner6=6 & next(move)=5 : 7;
		corner6=7 & next(move)=5 : 3;
		corner6=3 & next(move)=5 : 2;
		corner6=3 & next(move)=6 : 4;
		corner6=4 & next(move)=6 : 8;
		corner6=8 & next(move)=6 : 7;
		corner6=7 & next(move)=6 : 3;
		TRUE : corner6;
	esac;

	next(corner7) := case
		corner7=1 & next(move)=1 : 4;
		corner7=2 & next(move)=1 : 1;
		corner7=3 & next(move)=1 : 2;
		corner7=4 & next(move)=1 : 3;
		corner7=1 & next(move)=2 : 5;
		corner7=4 & next(move)=2 : 1;
		corner7=5 & next(move)=2 : 8;
		corner7=8 & next(move)=2 : 4;
		corner7=1 & next(move)=3 : 5;
		corner7=2 & next(move)=3 : 1;
		corner7=5 & next(move)=3 : 6;
		corner7=6 & next(move)=3 : 2;
		corner7=5 & next(move)=4 : 8;
		corner7=6 & next(move)=4 : 5;
		corner7=7 & next(move)=4 : 6;
		corner7=8 & next(move)=4 : 7;
		corner7=2 & next(move)=5 : 6;
		corner7=6 & next(move)=5 : 7;
		corner7=7 & next(move)=5 : 3;
		corner7=3 & next(move)=5 : 2;
		corner7=3 & next(move)=6 : 4;
		corner7=4 & next(move)=6 : 8;
		corner7=8 & next(move)=6 : 7;
		corner7=7 & next(move)=6 : 3;
		TRUE : corner7;
	esac;

	next(corner8) := case
		corner8=1 & next(move)=1 : 4;
		corner8=2 & next(move)=1 : 1;
		corner8=3 & next(move)=1 : 2;
		corner8=4 & next(move)=1 : 3;
		corner8=1 & next(move)=2 : 5;
		corner8=4 & next(move)=2 : 1;
		corner8=5 & next(move)=2 : 8;
		corner8=8 & next(move)=2 : 4;
		corner8=1 & next(move)=3 : 5;
		corner8=2 & next(move)=3 : 1;
		corner8=5 & next(move)=3 : 6;
		corner8=6 & next(move)=3 : 2;
		corner8=5 & next(move)=4 : 8;
		corner8=6 & next(move)=4 : 5;
		corner8=7 & next(move)=4 : 6;
		corner8=8 & next(move)=4 : 7;
		corner8=2 & next(move)=5 : 6;
		corner8=6 & next(move)=5 : 7;
		corner8=7 & next(move)=5 : 3;
		corner8=3 & next(move)=5 : 2;
		corner8=3 & next(move)=6 : 4;
		corner8=4 & next(move)=6 : 8;
		corner8=8 & next(move)=6 : 7;
		corner8=7 & next(move)=6 : 3;
		TRUE : corner8;
	esac;

SPEC  ! AG (corner1!=1 | corner2!=2 | corner3!=3 | corner4!=4 | corner5!=5 | corner6!=6 | corner7!=7 | corner8!=8);
